---
title: Data Loading Tools Lab
owner: Crunchy Data
---

##<a id="setting-up-your-environment"></a> Setting up your environment

The following examples will provide a general overview for setting up a service and binding
certain tools and applications to the service.
These topics are covered in-depth on the [Using Crunchy PostgreSQL for PCF](using.html) page.

<p class="note"><strong>Note:</strong>
Some applications referenced in this document may only be available to current Crunchy Data
service subscribers, and accessed through the Crunchy Customer Portal.
For further information, contact Crunchy Data Sales.
</p>

In order to start setting up the Crunchy PostgreSQL tools, some environment details will need to be setup.

Initially, make sure you have access to whichever Pivotal Cloud Foundry environment you’ll be working in.
Whomever is your administrator or supervisor should be able to provide you with the web URL and login credentials.

These steps will require use of the Cloud Foundry ‘cf cli’ tool. To obtain the tool:

- Log in into your Pivotal Apps Manager.
- Click on Tools on the left hand side of the screen.
- On the screen, you will be provided a download link for the ‘cf cli’ utility for your release.
- Download and follow the installation instructions to get it set up.
- If there is any difficulty installing the ‘cf cli’ tool, please use [reference guide](https://docs.cloudfoundry.org/cf-cli/cf-help.html)

Using the ‘cf cli’ tool, log into the CF instance in which you’ll be doing the work.
The command structure is as follows:
`cf login -a API_URL -u USERNAME -p PASSWORD -o ORG -s SPACE`


##<a id="setting-up-a-crunchy-postgresql-database"></a> Setting up a Crunchy PostgreSQL Database

- Log into the Pivotal Apps Manager.
- Select the appropriate ORG on the left hand side of the screen in which you will create your environment.
- Click on the Marketplace link on the left hand side of the screen.
- From the Marketplace, select the Database cluster you wish to use
- Setting up the service:
  - Configuration:
  - Instance Name: This will be the name of your service instance. The name should be short but descriptive. The name should not contain any spaces.
  - Space: This will be the working space for the deployment of the application. If you have a production or development space allocated, this is where the space will be defined. It may be pre-defined depending on the access rights associated with your user account.
  - Bind to App: For this deployment the service will not be bound to any application.
- Click on the ‘Show Advanced Options’ button to add the additional required fields:
- Create 4 additional fields as specified below:
  - `db_username`: User name associated with the database.
  - `db_name`: The name of the database.
  - `owner_email`: The application owner email address.
  - `owner_name`: The application owner full name.
  - `postgis`: Set to true to include PostGIS extensions.
- Click on the Add button once all fields have been completed.

Now the database is setup and running on a service, we’ll need to set up service keys. Service keys are what you’ll use to access the database with a user name and password.
Setting up a service key:

- On the left hand side of your screen, click on the ORG and Spaces under which your service was created.
- On the right hand side of the screen, under the list of services, you should see your newly created service. The second column will have the name you specified in previous steps.
- Click on that row and the page will reload under the settings for your service.
- In the Overview tab for your service, under the Service Key Credentials header, click on the ‘Create Service Key’ button.
- Fill in the name of the service key.
  - It is best practice to name the service key with the same name as your instance that followed by the suffix `_sk`.
  - For example, if your instance name was `test_deployment`, then your first service key would be `test_deployment_sk`.
- Click the ‘Create’ button.
- Your service key has now been created and you will see it listed under the service key credentials.
- Click on your service key and it will present you with your service credentials for reference.
- You will want to save the information on this page temporarily to set up the pgAdmin instance as well as the PostgreSQL Tools.

##<a id="setting-up-the-crunchy-pgadmin-instance"></a> Crunchy pgAdmin4

<p class="note"><strong>Note:</strong>
The version of CF-PGAdmin4 referenced in this document may only be available to current Crunchy Data
service subscribers, and accessed through the Crunchy Customer Portal.
For further information, contact Crunchy Data Sales.
</p>

Now that the database service has been set up and running, you have a functional database.
The next step is to administer the database; that will be done using the pgAdmin web interface.

- Open up the `manifest.yml` file in an editor and change the following values:
  - `name`: The name of the application deployment. It should be unique to the environment and not previously used.
  - `memory`: 256MB of memory should be sufficient to run this application.
  - `disk_quota`: 1GB of disk space should accommodate the setup.
- Save the file once those changes have been made.
- Open up the `config_local.py` file in an editor and change the following values:
  - `PGADMIN_SETUP_EMAIL`: This is the email user account that you will use to log into the pgAdmin interface. Best practices are to use the same email address used in the database setup steps.
  - `PGADMIN_SETUP_PASSWORD`: This will be the password used to access the pgAdmin interface.
- Change into the `crunchy-pgadmin` directory: `cd ~/crunchy-pgadmin`
- Push the application up to the Pivotal Cloud Foundry area: `cf push`
  - One note regarding the push: during the setup/deployment of the application, it will show status as ‘Crashed.’ You will need to wait until your terminal returns to the start before it will show ‘Running’ status.

Now setting up the pgAdmin interface to talk to the database set up previously.

- In the Pivotal Apps Manager, on the left, select the ORG and Spaces in which your application was deployed.
- On the right hand side of the screen, you should now see your application name specified previously.
- Below the name of the application, you should see the word ‘Running’ in green letters indicating that the application is running properly. If it is not, please reach out to Crunchy Data for assistance.
- Click on the Application.
- In the details of the application, click on the Route tab.
- Under the Route tab, you will see a URL listed. This URL is the link to your running pgAdmin interface. Save this URL.
- Open the URL in a separate browser window or tab.
- The login credentials will be the email address and password specified within `config_local.py` in the previous section.

You will now be presented with a blank pgAdmin interface.
To set up the access to your previously created database:

- Right click on Servers on the left and navigate to "Create Server" from the drop down available.
- Fill out the following information for the General Tab:
  - Name: This name should match the name of the database instance created.
  - Server Group: Select the Servers group.
  - Connect Now: Leave this box checked.
  - Comments: This is for details regarding the setup of this connection. A brief summary of the database you are connecting to and its’ purpose should be listed here.
- Fill out the following information for the Connection Tab:
  - `Host name/address`: Use the IP address provided by the service key
  - `Port`: Leave as `5432`
  - `Maintenance DB`: Use the `database` name provided by the service key.
  - `User Name`: Use the `username` provided by the service key.
  - `Password`: Use the `password` provided by the service key.
  - `Save Password`: Check this box.
  - `Role`: Leave this field blank.
- Click the Save button.

You should now be able to view your database and have the standard PostgreSQL administrator tools at your disposal.
